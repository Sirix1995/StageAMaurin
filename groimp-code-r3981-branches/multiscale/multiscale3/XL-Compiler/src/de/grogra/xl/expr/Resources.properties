expr.illegal-cast = An expression of type {0} cannot be cast into type {1}.
expr.illegal-optype = Illegal operand type for {0}.
expr.illegal-promotion = Illegal promotion for {0}.
expr.no-widening-conversion = A conversion of a value of type {0} to {1} is not a widening conversion.
expr.undefined-conversion = A conversion of {0} to {1} is not defined.
expr.undefined-var-conversion = A conversion of a variant of class {0} to type {1} is not defined.
expr.wrong-expr-count = An expression of class {0} needs {1,choice,0#no child nodes|1#one child node|2#{1} child nodes}, but there {2,choice,0#are no nodes|1#is one child node|2#are {2} child nodes}.
expr.wrong-expr-type = An expression of class {0} expected an expression of return type {2} as child node {1}, but a return type {3} was found.
expr.wrong-expr-class = An expression of class {0} expected an expression of class {2} as child node {1}, but class {3} was found.

expr.conditional-incompatible-types = The type of the true sub-expression, {0}, is not compatible with the type of the false sub-expression, {1}.
expr.unexpected-type = The type of this expression, {0}, is not {1}.
