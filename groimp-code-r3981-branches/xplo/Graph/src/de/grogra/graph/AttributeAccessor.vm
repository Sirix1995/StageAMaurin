#if (!$generate)
	#set ($generate = true)
	#foreach ($type in $types)
		$pp.setType($type)
		#set ($Type = $pp.firstToUpperCase($type))
		#set ($out = "de/grogra/graph/${Type}AttributeAccessor.java")
		#if ($type == "Object")
			#set ($T = "T")
		#else
			#set ($T = "$type")
		#end
		$generator.parse("de/grogra/graph/AttributeAccessor.vm", $out)
	#end
#else

$pp.autogenerated

/*
 * Copyright (C) 2002 - 2007 Lehrstuhl Grafische Systeme, BTU Cottbus
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

package de.grogra.graph;

#if ($pp.Object)
public interface ${Type}AttributeAccessor<T> extends AttributeAccessor
#else
public interface ${Type}AttributeAccessor extends AttributeAccessor
#end
{
	$T get$Type (Object object, GraphState gs);

#if ($type == "Object")

	$T get$Type (Object object, $T placeIn, GraphState gs);
	
	$type setSubfield (Object object, de.grogra.reflect.FieldChain field,
					   int[] indices, Object value, GraphState gs);

#end

	$T set$Type (Object object, $T value, GraphState gs);
}

#end
