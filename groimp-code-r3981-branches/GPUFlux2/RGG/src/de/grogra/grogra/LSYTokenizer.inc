	$!{INSTANCE}addToken ($!{INTERFACE}LT, "<");
	$!{INSTANCE}addToken ($!{INTERFACE}GT, ">");
	$!{INSTANCE}addToken ($!{INTERFACE}SUB, "-");
	$!{INSTANCE}addToken ($!{INTERFACE}MUL, "*");
	$!{INSTANCE}addToken ($!{INTERFACE}ADD, "+");
	$!{INSTANCE}addToken ($!{INTERFACE}NOT, "!");
	$!{INSTANCE}addToken ($!{INTERFACE}DIV, "/");
	$!{INSTANCE}addToken ($!{INTERFACE}REM, "%");
	$!{INSTANCE}addToken ($!{INTERFACE}POW, "^");
	$!{INSTANCE}addToken ($!{INTERFACE}LE, "<=");
	$!{INSTANCE}addToken ($!{INTERFACE}GE, ">=");
	$!{INSTANCE}addToken ($!{INTERFACE}NOT_EQUALS, "!=");
	$!{INSTANCE}addToken ($!{INTERFACE}EQUALS, "==");
	$!{INSTANCE}addToken ($!{INTERFACE}COR, "||");
	$!{INSTANCE}addToken ($!{INTERFACE}CAND, "&&");
	$!{INSTANCE}addToken ($!{INTERFACE}LPAREN, "(");
	$!{INSTANCE}addToken ($!{INTERFACE}RPAREN, ")");
	$!{INSTANCE}addToken ($!{INTERFACE}LBRACK, "[");
	$!{INSTANCE}addToken ($!{INTERFACE}RBRACK, "]");
	$!{INSTANCE}addToken ($!{INTERFACE}COLON, ":");
	$!{INSTANCE}addToken ($!{INTERFACE}COMMA, ",");
	$!{INSTANCE}addToken (225, "\\set");
	$!{INSTANCE}addToken (226, "\\length");
	$!{INSTANCE}addToken (227, "\\laenge");
	$!{INSTANCE}addToken (228, "\\angle");
	$!{INSTANCE}addToken (229, "\\winkel");
	$!{INSTANCE}addToken (230, "\\const");
	$!{INSTANCE}addToken (231, "\\register");
	$!{INSTANCE}addToken (232, "\\var");
	$!{INSTANCE}addToken ($!{INTERFACE}LITERAL_uniform, "uniform");
	$!{INSTANCE}addToken ($!{INTERFACE}LITERAL_normal, "normal");
	$!{INSTANCE}addToken ($!{INTERFACE}LITERAL_binomial, "binomial");
	$!{INSTANCE}addToken ($!{INTERFACE}LITERAL_negbinomial, "negbinomial");
	$!{INSTANCE}addToken ($!{INTERFACE}LITERAL_poisson, "poisson");
	$!{INSTANCE}addToken ($!{INTERFACE}LITERAL_distribution, "distribution");
	$!{INSTANCE}addToken ($!{INTERFACE}LITERAL_table, "table");
	$!{INSTANCE}addToken ($!{INTERFACE}LITERAL_generation, "generation");
	$!{INSTANCE}addToken ($!{INTERFACE}LITERAL_register, "register");
	$!{INSTANCE}addToken ($!{INTERFACE}LITERAL_local, "local");
	$!{INSTANCE}addToken ($!{INTERFACE}LITERAL_index, "index");
	$!{INSTANCE}addToken ($!{INTERFACE}LITERAL_length, "length");
	$!{INSTANCE}addToken ($!{INTERFACE}LITERAL_diameter, "diameter");
	$!{INSTANCE}addToken ($!{INTERFACE}LITERAL_n_value, "n_value");
	$!{INSTANCE}addToken ($!{INTERFACE}LITERAL_v_value, "v_value");
	$!{INSTANCE}addToken ($!{INTERFACE}LITERAL_color, "color");
	$!{INSTANCE}addToken ($!{INTERFACE}LITERAL_order, "order");
	$!{INSTANCE}addToken ($!{INTERFACE}LITERAL_carbon, "carbon");
	$!{INSTANCE}addToken ($!{INTERFACE}LITERAL_q_value, "q_value");
	$!{INSTANCE}addToken ($!{INTERFACE}LITERAL_xcoordinate, "xcoordinate");
	$!{INSTANCE}addToken ($!{INTERFACE}LITERAL_ycoordinate, "ycoordinate");
	$!{INSTANCE}addToken ($!{INTERFACE}LITERAL_zcoordinate, "zcoordinate");
	$!{INSTANCE}addToken ($!{INTERFACE}LITERAL_function, "function");
	$!{INSTANCE}addToken (256, "$!{_grogra_de_undefined}#");
	$!{INSTANCE}addToken (257, "$!{_grogra_de_undefined}#$!{_grogra_de_undefined}#");
	$!{INSTANCE}addToken (258, "?");
	$!{INSTANCE}addToken (259, "&");
	$!{INSTANCE}addToken ($!{INTERFACE}LITERAL_if, "if");
	$!{INSTANCE}addToken ($!{INTERFACE}LITERAL_sum, "sum");
	$!{INSTANCE}addToken ($!{INTERFACE}LITERAL_sumd, "sumd");
	$!{INSTANCE}addToken ($!{INTERFACE}LITERAL_sump, "sump");
